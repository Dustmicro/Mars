<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.bean.db.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="six" jdbcType="INTEGER" property="six" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="tel" jdbcType="INTEGER" property="tel" />
    <result column="e_mal" jdbcType="VARCHAR" property="eMal" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_name, age, six, password, tel, e_mal, address, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from u_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from u_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.bean.db.User">
    insert into u_user (id, user_name, age, 
      six, password, tel, 
      e_mal, address, status
      )
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{six,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, #{tel,jdbcType=INTEGER}, 
      #{eMal,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.bean.db.User">
    insert into u_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="six != null">
        six,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="eMal != null">
        e_mal,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="six != null">
        #{six,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=INTEGER},
      </if>
      <if test="eMal != null">
        #{eMal,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.bean.db.User">
    update u_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="six != null">
        six = #{six,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=INTEGER},
      </if>
      <if test="eMal != null">
        e_mal = #{eMal,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.bean.db.User">
    update u_user
    set user_name = #{userName,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      six = #{six,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=INTEGER},
      e_mal = #{eMal,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="base_query">
    <trim prefix="WHERE" prefixOverrides="AND | OR">
      <if test="null != id">
        andt.idt.id=#{id,jdbcType=INTEGER}
      </if>
      <if test="null != userName">
        andt.user_namet.user_name=#{userName,jdbcType=VARCHAR}
      </if>
      <if test="null != age">
        andt.aget.age=#{age,jdbcType=INTEGER}
      </if>
      <if test="null != six">
        andt.sixt.six=#{six,jdbcType=INTEGER}
      </if>
      <if test="null != password">
        andt.passwordt.password=#{password,jdbcType=VARCHAR}
      </if>
      <if test="null != tel">
        andt.telt.tel=#{tel,jdbcType=INTEGER}
      </if>
      <if test="null != eMal">
        andt.e_malt.e_mal=#{eMal,jdbcType=VARCHAR}
      </if>
      <if test="null != address">
        andt.addresst.address=#{address,jdbcType=VARCHAR}
      </if>
      <if test="null != status">
        andt.statust.status=#{status,jdbcType=INTEGER}
      </if>
    </trim>
  </sql>
  <select id="find" parameterType="com.example.bean.db.User" resultMap="BaseResultMap">
    selectt.*fromu_user t
    <include refid="base_query" />
  </select>
  <select id="list" parameterType="com.example.bean.db.User" resultMap="BaseResultMap">
    selectt.*fromu_user t
    <include refid="base_query" />
  </select>
</mapper>